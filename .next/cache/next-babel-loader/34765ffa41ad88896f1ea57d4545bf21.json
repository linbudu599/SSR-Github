{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { withRouter } from \"next/router\";\nimport React from \"react\";\nvar Test = withRouter(function (_ref) {\n  var router = _ref.router,\n      name = _ref.name,\n      promise = _ref.promise;\n  console.log(name, promise);\n  return __jsx(React.Fragment, null, __jsx(\"p\", null, router.query.id), __jsx(\"p\", null, name), __jsx(\"p\", null, \"1111111111\"));\n});\n\nTest.getInitialProps = function _callee(ctx) {\n  var promise;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          promise = new _Promise(function (resolve) {\n            setTimeout(function () {\n              resolve({\n                name: \"linbudu\"\n              });\n            }, 1000);\n          });\n          return _context.abrupt(\"return\", _objectSpread({}, promise));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Test;","map":{"version":3,"sources":["C:/Users/归去来兮/Desktop/ssr-github/pages/a.js"],"names":["withRouter","React","Test","router","name","promise","console","log","query","id","getInitialProps","ctx","resolve","setTimeout"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,IAAI,GAAGF,UAAU,CAAC,gBAA+B;AAAA,MAA5BG,MAA4B,QAA5BA,MAA4B;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,OAAlB;AACA,SACE,4BACE,iBAAIF,MAAM,CAACK,KAAP,CAAaC,EAAjB,CADF,EAEE,iBAAIL,IAAJ,CAFF,EAGE,8BAHF,CADF;AAOD,CATsB,CAAvB;;AAWAF,IAAI,CAACQ,eAAL,GAAuB,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACfN,UAAAA,OADe,GACL,aAAY,UAAAO,OAAO,EAAI;AACrCC,YAAAA,UAAU,CAAC,YAAM;AACfD,cAAAA,OAAO,CAAC;AAAER,gBAAAA,IAAI,EAAE;AAAR,eAAD,CAAP;AACD,aAFS,EAEP,IAFO,CAAV;AAGD,WAJe,CADK;AAAA,6DAMTC,OANS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AASA,eAAeH,IAAf","sourcesContent":["import { withRouter } from \"next/router\";\r\nimport React from \"react\";\r\n\r\nconst Test = withRouter(({ router, name, promise }) => {\r\n  console.log(name, promise);\r\n  return (\r\n    <>\r\n      <p>{router.query.id}</p>\r\n      <p>{name}</p>\r\n      <p>1111111111</p>\r\n    </>\r\n  );\r\n});\r\n\r\nTest.getInitialProps = async ctx => {\r\n  const promise = new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve({ name: \"linbudu\" });\r\n    }, 1000);\r\n  });\r\n  return { ...promise };\r\n};\r\n\r\nexport default Test;\r\n"]},"metadata":{},"sourceType":"module"}