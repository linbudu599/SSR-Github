{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n// 重写默认的app.js\nimport App from \"next/app\"; // 会引入全部的CSS，但同样能够异步分模块加载\n\nimport \"antd/dist/antd.css\";\nimport React from \"react\";\n\nvar CustomApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(CustomApp, _App);\n\n  function CustomApp() {\n    _classCallCheck(this, CustomApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CustomApp).apply(this, arguments));\n  }\n\n  _createClass(CustomApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      console.log(Component, pageProps);\n      return __jsx(React.Fragment, null, __jsx(Component, pageProps));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var Component, router, ctx, pageProps;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Component = _ref.Component, router = _ref.router, ctx = _ref.ctx;\n              pageProps = {}; // 如果当前的页面具有该方法，则需要执行并传入\n\n              if (!Component.getInitialProps) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n            case 5:\n              pageProps = _context.sent;\n\n            case 6:\n              return _context.abrupt(\"return\", {\n                pageProps: pageProps\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return CustomApp;\n}(App);\n\nexport default CustomApp;","map":{"version":3,"sources":["C:/Users/归去来兮/Desktop/ssr-github/pages/_app.js"],"names":["App","React","CustomApp","props","Component","pageProps","console","log","router","ctx","getInitialProps"],"mappings":";;;;;;;AAAA;AACA,OAAOA,GAAP,MAAgB,UAAhB,C,CACA;;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IACMC,S;;;;;;;;;;;;;6BAYK;AAAA,wBAC0B,KAAKC,KAD/B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAEPC,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAAuBC,SAAvB;AACA,aACE,4BACE,MAAC,SAAD,EAAeA,SAAf,CADF,CADF;AAKD;;;;;;;;;AAnB8BD,cAAAA,S,QAAAA,S,EAAWI,M,QAAAA,M,EAAQC,G,QAAAA,G;AAC5CJ,cAAAA,S,GAAY,E,EAEhB;;mBACID,SAAS,CAACM,e;;;;;;+CACMN,SAAS,CAACM,eAAV,CAA0BD,GAA1B,C;;;AAAlBJ,cAAAA,S;;;+CAGK;AAAEA,gBAAAA,SAAS,EAATA;AAAF,e;;;;;;;;;;;;EATaL,G;;AAuBxB,eAAeE,SAAf","sourcesContent":["// 重写默认的app.js\r\nimport App from \"next/app\";\r\n// 会引入全部的CSS，但同样能够异步分模块加载\r\nimport \"antd/dist/antd.css\";\r\nimport React from \"react\";\r\nclass CustomApp extends App {\r\n  static async getInitialProps({ Component, router, ctx }) {\r\n    let pageProps = {};\r\n\r\n    // 如果当前的页面具有该方法，则需要执行并传入\r\n    if (Component.getInitialProps) {\r\n      pageProps = await Component.getInitialProps(ctx);\r\n    }\r\n\r\n    return { pageProps };\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps } = this.props;\r\n    console.log(Component, pageProps);\r\n    return (\r\n      <>\r\n        <Component {...pageProps} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomApp;\r\n"]},"metadata":{},"sourceType":"module"}