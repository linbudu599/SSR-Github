{"ast":null,"code":"var __jsx = React.createElement;\n// 重写默认的app.js\nimport App from \"next/app\";\nimport Layout from \"../components/layout\";\nimport Head from \"next/head\"; // 会引入全部的CSS，但同样能够异步分模块加载\n\nimport \"antd/dist/antd.css\";\nimport React from \"react\";\n\nclass CustomApp extends App {\n  static async getInitialProps({\n    Component,\n    router,\n    ctx\n  }) {\n    let pageProps = {}; // 如果当前的页面具有该方法，则需要执行并将结果传入该组件\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    console.log(Component, pageProps);\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"My new cool app\")), __jsx(Layout, null, __jsx(Component, pageProps)));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/归去来兮/Desktop/ssr-github/pages/_app.js"],"names":["App","Layout","Head","React","CustomApp","getInitialProps","Component","router","ctx","pageProps","render","props","console","log"],"mappings":";AAAA;AACA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,SAAN,SAAwBJ,GAAxB,CAA4B;AAC1B,eAAaK,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA;AAArB,GAA7B,EAAyD;AACvD,QAAIC,SAAS,GAAG,EAAhB,CADuD,CAGvD;;AACA,QAAIH,SAAS,CAACD,eAAd,EAA+B;AAC7BI,MAAAA,SAAS,GAAG,MAAMH,SAAS,CAACD,eAAV,CAA0BG,GAA1B,CAAlB;AACD;;AAED,WAAO;AAAEC,MAAAA;AAAF,KAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,SAAF;AAAaG,MAAAA;AAAb,QAA2B,KAAKE,KAAtC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ,EAAuBG,SAAvB;AACA,WACE,4BACE,MAAC,IAAD,QACE,uCADF,CADF,EAIE,MAAC,MAAD,QACE,MAAC,SAAD,EAAeA,SAAf,CADF,CAJF,CADF;AAUD;;AAzByB","sourcesContent":["// 重写默认的app.js\r\nimport App from \"next/app\";\r\nimport Layout from \"../components/layout\";\r\nimport Head from \"next/head\";\r\n// 会引入全部的CSS，但同样能够异步分模块加载\r\nimport \"antd/dist/antd.css\";\r\nimport React from \"react\";\r\nclass CustomApp extends App {\r\n  static async getInitialProps({ Component, router, ctx }) {\r\n    let pageProps = {};\r\n\r\n    // 如果当前的页面具有该方法，则需要执行并将结果传入该组件\r\n    if (Component.getInitialProps) {\r\n      pageProps = await Component.getInitialProps(ctx);\r\n    }\r\n\r\n    return { pageProps };\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps } = this.props;\r\n    console.log(Component, pageProps);\r\n    return (\r\n      <>\r\n        <Head>\r\n          <title>My new cool app</title>\r\n        </Head>\r\n        <Layout>\r\n          <Component {...pageProps} />\r\n        </Layout>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}